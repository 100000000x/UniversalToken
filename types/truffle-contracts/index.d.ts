/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { AccessControlContract } from "./AccessControl";
import { AccessControlEnumerableContract } from "./AccessControlEnumerable";
import { AllowlistAdminRoleContract } from "./AllowlistAdminRole";
import { AllowlistedRoleContract } from "./AllowlistedRole";
import { AllowlistMockContract } from "./AllowlistMock";
import { BatchBalanceReaderContract } from "./BatchBalanceReader";
import { BatchReaderContract } from "./BatchReader";
import { BatchTokenIssuerContract } from "./BatchTokenIssuer";
import { BlocklistAdminRoleContract } from "./BlocklistAdminRole";
import { BlocklistedRoleContract } from "./BlocklistedRole";
import { BlocklistMockContract } from "./BlocklistMock";
import { CertificateSignerMockContract } from "./CertificateSignerMock";
import { CertificateSignerRoleContract } from "./CertificateSignerRole";
import { ClockMockContract } from "./ClockMock";
import { DomainAwareContract } from "./DomainAware";
import { ERC1400Contract } from "./ERC1400";
import { ERC1400HoldableCertificateTokenContract } from "./ERC1400HoldableCertificateToken";
import { ERC1400HoldableTokenContract } from "./ERC1400HoldableToken";
import { ERC1400TokensCheckerContract } from "./ERC1400TokensChecker";
import { ERC1400TokensRecipientMockContract } from "./ERC1400TokensRecipientMock";
import { ERC1400TokensSenderMockContract } from "./ERC1400TokensSenderMock";
import { ERC1400TokensValidatorContract } from "./ERC1400TokensValidator";
import { ERC1400TokensValidatorMockContract } from "./ERC1400TokensValidatorMock";
import { ERC165Contract } from "./ERC165";
import { ERC1820ImplementerContract } from "./ERC1820Implementer";
import { ERC20Contract } from "./ERC20";
import { ERC20BurnableContract } from "./ERC20Burnable";
import { ERC20HoldableTokenContract } from "./ERC20HoldableToken";
import { ERC20PausableContract } from "./ERC20Pausable";
import { ERC20TokenContract } from "./ERC20Token";
import { ERC721Contract } from "./ERC721";
import { ERC721BurnableContract } from "./ERC721Burnable";
import { ERC721EnumerableContract } from "./ERC721Enumerable";
import { ERC721PausableContract } from "./ERC721Pausable";
import { ERC721TokenContract } from "./ERC721Token";
import { ERC721URIStorageContract } from "./ERC721URIStorage";
import { ExtensionContract } from "./Extension";
import { ExtensionMockContract } from "./ExtensionMock";
import { FakeERC1400MockContract } from "./FakeERC1400Mock";
import { FundIssuerContract } from "./FundIssuer";
import { IAccessControlContract } from "./IAccessControl";
import { IAccessControlEnumerableContract } from "./IAccessControlEnumerable";
import { IERC1400Contract } from "./IERC1400";
import { IERC1400ExtendedContract } from "./IERC1400Extended";
import { IERC1400TokensCheckerContract } from "./IERC1400TokensChecker";
import { IERC1400TokensRecipientContract } from "./IERC1400TokensRecipient";
import { IERC1400TokensSenderContract } from "./IERC1400TokensSender";
import { IERC1400TokensValidatorContract } from "./IERC1400TokensValidator";
import { IERC1400TokensValidatorExtendedContract } from "./IERC1400TokensValidatorExtended";
import { IERC1643Contract } from "./IERC1643";
import { IERC165Contract } from "./IERC165";
import { IERC1820RegistryContract } from "./IERC1820Registry";
import { IERC20Contract } from "./IERC20";
import { IERC20HoldableTokenContract } from "./IERC20HoldableToken";
import { IERC20MetadataContract } from "./IERC20Metadata";
import { IERC721Contract } from "./IERC721";
import { IERC721EnumerableContract } from "./IERC721Enumerable";
import { IERC721MetadataContract } from "./IERC721Metadata";
import { IERC721ReceiverContract } from "./IERC721Receiver";
import { IHoldableERC1400TokenExtensionContract } from "./IHoldableERC1400TokenExtension";
import { IMinterMockContract } from "./IMinterMock";
import { IMinterRoleContract } from "./IMinterRole";
import { MigrationsContract } from "./Migrations";
import { MinterMockContract } from "./MinterMock";
import { MinterRoleContract } from "./MinterRole";
import { OwnableContract } from "./Ownable";
import { PausableContract } from "./Pausable";
import { PauserMockContract } from "./PauserMock";
import { PauserRoleContract } from "./PauserRole";
import { SwapsContract } from "./Swaps";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "AccessControl"): AccessControlContract;
      require(name: "AccessControlEnumerable"): AccessControlEnumerableContract;
      require(name: "AllowlistAdminRole"): AllowlistAdminRoleContract;
      require(name: "AllowlistedRole"): AllowlistedRoleContract;
      require(name: "AllowlistMock"): AllowlistMockContract;
      require(name: "BatchBalanceReader"): BatchBalanceReaderContract;
      require(name: "BatchReader"): BatchReaderContract;
      require(name: "BatchTokenIssuer"): BatchTokenIssuerContract;
      require(name: "BlocklistAdminRole"): BlocklistAdminRoleContract;
      require(name: "BlocklistedRole"): BlocklistedRoleContract;
      require(name: "BlocklistMock"): BlocklistMockContract;
      require(name: "CertificateSignerMock"): CertificateSignerMockContract;
      require(name: "CertificateSignerRole"): CertificateSignerRoleContract;
      require(name: "ClockMock"): ClockMockContract;
      require(name: "DomainAware"): DomainAwareContract;
      require(name: "ERC1400"): ERC1400Contract;
      require(
        name: "ERC1400HoldableCertificateToken"
      ): ERC1400HoldableCertificateTokenContract;
      require(name: "ERC1400HoldableToken"): ERC1400HoldableTokenContract;
      require(name: "ERC1400TokensChecker"): ERC1400TokensCheckerContract;
      require(
        name: "ERC1400TokensRecipientMock"
      ): ERC1400TokensRecipientMockContract;
      require(name: "ERC1400TokensSenderMock"): ERC1400TokensSenderMockContract;
      require(name: "ERC1400TokensValidator"): ERC1400TokensValidatorContract;
      require(
        name: "ERC1400TokensValidatorMock"
      ): ERC1400TokensValidatorMockContract;
      require(name: "ERC165"): ERC165Contract;
      require(name: "ERC1820Implementer"): ERC1820ImplementerContract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "ERC20Burnable"): ERC20BurnableContract;
      require(name: "ERC20HoldableToken"): ERC20HoldableTokenContract;
      require(name: "ERC20Pausable"): ERC20PausableContract;
      require(name: "ERC20Token"): ERC20TokenContract;
      require(name: "ERC721"): ERC721Contract;
      require(name: "ERC721Burnable"): ERC721BurnableContract;
      require(name: "ERC721Enumerable"): ERC721EnumerableContract;
      require(name: "ERC721Pausable"): ERC721PausableContract;
      require(name: "ERC721Token"): ERC721TokenContract;
      require(name: "ERC721URIStorage"): ERC721URIStorageContract;
      require(name: "Extension"): ExtensionContract;
      require(name: "ExtensionMock"): ExtensionMockContract;
      require(name: "FakeERC1400Mock"): FakeERC1400MockContract;
      require(name: "FundIssuer"): FundIssuerContract;
      require(name: "IAccessControl"): IAccessControlContract;
      require(
        name: "IAccessControlEnumerable"
      ): IAccessControlEnumerableContract;
      require(name: "IERC1400"): IERC1400Contract;
      require(name: "IERC1400Extended"): IERC1400ExtendedContract;
      require(name: "IERC1400TokensChecker"): IERC1400TokensCheckerContract;
      require(name: "IERC1400TokensRecipient"): IERC1400TokensRecipientContract;
      require(name: "IERC1400TokensSender"): IERC1400TokensSenderContract;
      require(name: "IERC1400TokensValidator"): IERC1400TokensValidatorContract;
      require(
        name: "IERC1400TokensValidatorExtended"
      ): IERC1400TokensValidatorExtendedContract;
      require(name: "IERC1643"): IERC1643Contract;
      require(name: "IERC165"): IERC165Contract;
      require(name: "IERC1820Registry"): IERC1820RegistryContract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "IERC20HoldableToken"): IERC20HoldableTokenContract;
      require(name: "IERC20Metadata"): IERC20MetadataContract;
      require(name: "IERC721"): IERC721Contract;
      require(name: "IERC721Enumerable"): IERC721EnumerableContract;
      require(name: "IERC721Metadata"): IERC721MetadataContract;
      require(name: "IERC721Receiver"): IERC721ReceiverContract;
      require(
        name: "IHoldableERC1400TokenExtension"
      ): IHoldableERC1400TokenExtensionContract;
      require(name: "IMinterMock"): IMinterMockContract;
      require(name: "IMinterRole"): IMinterRoleContract;
      require(name: "Migrations"): MigrationsContract;
      require(name: "MinterMock"): MinterMockContract;
      require(name: "MinterRole"): MinterRoleContract;
      require(name: "Ownable"): OwnableContract;
      require(name: "Pausable"): PausableContract;
      require(name: "PauserMock"): PauserMockContract;
      require(name: "PauserRole"): PauserRoleContract;
      require(name: "Swaps"): SwapsContract;
    }
  }
}

export { AccessControlContract, AccessControlInstance } from "./AccessControl";
export {
  AccessControlEnumerableContract,
  AccessControlEnumerableInstance,
} from "./AccessControlEnumerable";
export {
  AllowlistAdminRoleContract,
  AllowlistAdminRoleInstance,
} from "./AllowlistAdminRole";
export {
  AllowlistedRoleContract,
  AllowlistedRoleInstance,
} from "./AllowlistedRole";
export { AllowlistMockContract, AllowlistMockInstance } from "./AllowlistMock";
export {
  BatchBalanceReaderContract,
  BatchBalanceReaderInstance,
} from "./BatchBalanceReader";
export { BatchReaderContract, BatchReaderInstance } from "./BatchReader";
export {
  BatchTokenIssuerContract,
  BatchTokenIssuerInstance,
} from "./BatchTokenIssuer";
export {
  BlocklistAdminRoleContract,
  BlocklistAdminRoleInstance,
} from "./BlocklistAdminRole";
export {
  BlocklistedRoleContract,
  BlocklistedRoleInstance,
} from "./BlocklistedRole";
export { BlocklistMockContract, BlocklistMockInstance } from "./BlocklistMock";
export {
  CertificateSignerMockContract,
  CertificateSignerMockInstance,
} from "./CertificateSignerMock";
export {
  CertificateSignerRoleContract,
  CertificateSignerRoleInstance,
} from "./CertificateSignerRole";
export { ClockMockContract, ClockMockInstance } from "./ClockMock";
export { DomainAwareContract, DomainAwareInstance } from "./DomainAware";
export { ERC1400Contract, ERC1400Instance } from "./ERC1400";
export {
  ERC1400HoldableCertificateTokenContract,
  ERC1400HoldableCertificateTokenInstance,
} from "./ERC1400HoldableCertificateToken";
export {
  ERC1400HoldableTokenContract,
  ERC1400HoldableTokenInstance,
} from "./ERC1400HoldableToken";
export {
  ERC1400TokensCheckerContract,
  ERC1400TokensCheckerInstance,
} from "./ERC1400TokensChecker";
export {
  ERC1400TokensRecipientMockContract,
  ERC1400TokensRecipientMockInstance,
} from "./ERC1400TokensRecipientMock";
export {
  ERC1400TokensSenderMockContract,
  ERC1400TokensSenderMockInstance,
} from "./ERC1400TokensSenderMock";
export {
  ERC1400TokensValidatorContract,
  ERC1400TokensValidatorInstance,
} from "./ERC1400TokensValidator";
export {
  ERC1400TokensValidatorMockContract,
  ERC1400TokensValidatorMockInstance,
} from "./ERC1400TokensValidatorMock";
export { ERC165Contract, ERC165Instance } from "./ERC165";
export {
  ERC1820ImplementerContract,
  ERC1820ImplementerInstance,
} from "./ERC1820Implementer";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export { ERC20BurnableContract, ERC20BurnableInstance } from "./ERC20Burnable";
export {
  ERC20HoldableTokenContract,
  ERC20HoldableTokenInstance,
} from "./ERC20HoldableToken";
export { ERC20PausableContract, ERC20PausableInstance } from "./ERC20Pausable";
export { ERC20TokenContract, ERC20TokenInstance } from "./ERC20Token";
export { ERC721Contract, ERC721Instance } from "./ERC721";
export {
  ERC721BurnableContract,
  ERC721BurnableInstance,
} from "./ERC721Burnable";
export {
  ERC721EnumerableContract,
  ERC721EnumerableInstance,
} from "./ERC721Enumerable";
export {
  ERC721PausableContract,
  ERC721PausableInstance,
} from "./ERC721Pausable";
export { ERC721TokenContract, ERC721TokenInstance } from "./ERC721Token";
export {
  ERC721URIStorageContract,
  ERC721URIStorageInstance,
} from "./ERC721URIStorage";
export { ExtensionContract, ExtensionInstance } from "./Extension";
export { ExtensionMockContract, ExtensionMockInstance } from "./ExtensionMock";
export {
  FakeERC1400MockContract,
  FakeERC1400MockInstance,
} from "./FakeERC1400Mock";
export { FundIssuerContract, FundIssuerInstance } from "./FundIssuer";
export {
  IAccessControlContract,
  IAccessControlInstance,
} from "./IAccessControl";
export {
  IAccessControlEnumerableContract,
  IAccessControlEnumerableInstance,
} from "./IAccessControlEnumerable";
export { IERC1400Contract, IERC1400Instance } from "./IERC1400";
export {
  IERC1400ExtendedContract,
  IERC1400ExtendedInstance,
} from "./IERC1400Extended";
export {
  IERC1400TokensCheckerContract,
  IERC1400TokensCheckerInstance,
} from "./IERC1400TokensChecker";
export {
  IERC1400TokensRecipientContract,
  IERC1400TokensRecipientInstance,
} from "./IERC1400TokensRecipient";
export {
  IERC1400TokensSenderContract,
  IERC1400TokensSenderInstance,
} from "./IERC1400TokensSender";
export {
  IERC1400TokensValidatorContract,
  IERC1400TokensValidatorInstance,
} from "./IERC1400TokensValidator";
export {
  IERC1400TokensValidatorExtendedContract,
  IERC1400TokensValidatorExtendedInstance,
} from "./IERC1400TokensValidatorExtended";
export { IERC1643Contract, IERC1643Instance } from "./IERC1643";
export { IERC165Contract, IERC165Instance } from "./IERC165";
export {
  IERC1820RegistryContract,
  IERC1820RegistryInstance,
} from "./IERC1820Registry";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  IERC20HoldableTokenContract,
  IERC20HoldableTokenInstance,
} from "./IERC20HoldableToken";
export {
  IERC20MetadataContract,
  IERC20MetadataInstance,
} from "./IERC20Metadata";
export { IERC721Contract, IERC721Instance } from "./IERC721";
export {
  IERC721EnumerableContract,
  IERC721EnumerableInstance,
} from "./IERC721Enumerable";
export {
  IERC721MetadataContract,
  IERC721MetadataInstance,
} from "./IERC721Metadata";
export {
  IERC721ReceiverContract,
  IERC721ReceiverInstance,
} from "./IERC721Receiver";
export {
  IHoldableERC1400TokenExtensionContract,
  IHoldableERC1400TokenExtensionInstance,
} from "./IHoldableERC1400TokenExtension";
export { IMinterMockContract, IMinterMockInstance } from "./IMinterMock";
export { IMinterRoleContract, IMinterRoleInstance } from "./IMinterRole";
export { MigrationsContract, MigrationsInstance } from "./Migrations";
export { MinterMockContract, MinterMockInstance } from "./MinterMock";
export { MinterRoleContract, MinterRoleInstance } from "./MinterRole";
export { OwnableContract, OwnableInstance } from "./Ownable";
export { PausableContract, PausableInstance } from "./Pausable";
export { PauserMockContract, PauserMockInstance } from "./PauserMock";
export { PauserRoleContract, PauserRoleInstance } from "./PauserRole";
export { SwapsContract, SwapsInstance } from "./Swaps";
