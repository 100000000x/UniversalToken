/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IHoldableERC1400TokenExtensionContract
  extends Truffle.Contract<IHoldableERC1400TokenExtensionInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<IHoldableERC1400TokenExtensionInstance>;
}

type AllEvents = never;

export interface IHoldableERC1400TokenExtensionInstance
  extends Truffle.ContractInstance {
  executeHold: {
    (
      token: string,
      holdId: string,
      value: number | BN | string,
      lockPreimage: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<Truffle.TransactionResponse<AllEvents>>;
    call(
      token: string,
      holdId: string,
      value: number | BN | string,
      lockPreimage: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<boolean>;
    sendTransaction(
      token: string,
      holdId: string,
      value: number | BN | string,
      lockPreimage: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<string>;
    estimateGas(
      token: string,
      holdId: string,
      value: number | BN | string,
      lockPreimage: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<number>;
  };

  retrieveHoldData(
    token: string,
    holdId: string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{
    0: string;
    1: string;
    2: string;
    3: string;
    4: BN;
    5: BN;
    6: string;
    7: string;
    8: BN;
  }>;

  methods: {
    executeHold: {
      (
        token: string,
        holdId: string,
        value: number | BN | string,
        lockPreimage: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<Truffle.TransactionResponse<AllEvents>>;
      call(
        token: string,
        holdId: string,
        value: number | BN | string,
        lockPreimage: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<boolean>;
      sendTransaction(
        token: string,
        holdId: string,
        value: number | BN | string,
        lockPreimage: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<string>;
      estimateGas(
        token: string,
        holdId: string,
        value: number | BN | string,
        lockPreimage: string,
        txDetails?: Truffle.TransactionDetails
      ): Promise<number>;
    };

    retrieveHoldData(
      token: string,
      holdId: string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{
      0: string;
      1: string;
      2: string;
      3: string;
      4: BN;
      5: BN;
      6: string;
      7: string;
      8: BN;
    }>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
