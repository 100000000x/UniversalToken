/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20HoldableToken,
  ERC20HoldableTokenInterface,
} from "../ERC20HoldableToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lockPreimage",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ExecutedHold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "notary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expirationDateTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "lockHash",
        type: "bytes32",
      },
    ],
    name: "NewHold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ReleaseHold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "generateDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupplyOnHold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDateTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "lockHash",
        type: "bytes32",
      },
    ],
    name: "generateHoldId",
    outputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationDateTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "lockHash",
        type: "bytes32",
      },
    ],
    name: "hold",
    outputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "retrieveHoldData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "notary",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expirationDateTime",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "secretHash",
            type: "bytes32",
          },
          {
            internalType: "enum HoldStatusCode",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct ERC20HoldData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "lockPreimage",
        type: "bytes32",
      },
    ],
    name: "executeHold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "lockPreimage",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "executeHold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "executeHold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "releaseHold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "holdBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grossBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "holdId",
        type: "bytes32",
      },
    ],
    name: "holdStatus",
    outputs: [
      {
        internalType: "enum HoldStatusCode",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002fb938038062002fb98339810160408190526200003491620005a8565b82828282826200004433620000fe565b81516200005990600490602085019062000471565b5080516200006f90600590602084019062000471565b50506006805460ff191690555062000087336200014e565b62000091620001a0565b50620000ca6040518060400160405280600a81526020016922a92199182a37b5b2b760b11b815250620001c660201b620017811760201c565b60f81b7fff000000000000000000000000000000000000000000000000000000000000001660805250620006d19350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001698160086200021660201b620017cf1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60004681620001ae6200029a565b60009283526009602052604090922082905550919050565b60016007600083604051602001620001df91906200062d565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b62000222828262000341565b15620002755760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600046817f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620002c9620003c6565b8051602090910120620002f06040805180820190915260018152603160f81b602082015290565b80516020918201206040805192830194909452928101919091526060810191909152608081018390523060a082015260c00160408051601f1981840301815291905280516020909101209392505050565b60006001600160a01b038216620003a65760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016200026c565b506001600160a01b03166000908152602091909152604090205460ff1690565b6060620003d2620003d7565b905090565b606060048054620003e8906200067e565b80601f016020809104026020016040519081016040528092919081815260200182805462000416906200067e565b8015620004675780601f106200043b5761010080835404028352916020019162000467565b820191906000526020600020905b8154815290600101906020018083116200044957829003601f168201915b5050505050905090565b8280546200047f906200067e565b90600052602060002090601f016020900481019282620004a35760008555620004ee565b82601f10620004be57805160ff1916838001178555620004ee565b82800160010185558215620004ee579182015b82811115620004ee578251825591602001919060010190620004d1565b50620004fc92915062000500565b5090565b5b80821115620004fc576000815560010162000501565b600082601f8301126200052957600080fd5b81516001600160401b0380821115620005465762000546620006bb565b604051601f8301601f19908116603f01168101908282118183101715620005715762000571620006bb565b816040528381528660208588010111156200058b57600080fd5b6200059e8460208301602089016200064b565b9695505050505050565b600080600060608486031215620005be57600080fd5b83516001600160401b0380821115620005d657600080fd5b620005e48783880162000517565b94506020860151915080821115620005fb57600080fd5b506200060a8682870162000517565b925050604084015160ff811681146200062257600080fd5b809150509250925092565b60008251620006418184602087016200064b565b9190910192915050565b60005b83811015620006685781810151838201526020016200064e565b8381111562000678576000848401525b50505050565b600181811c908216806200069357607f821691505b60208210811415620006b557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160f81c6128c9620006f0600039600061026401526128c96000f3fe608060405234801561001057600080fd5b50600436106101c25760003560e01c806306fdde03146101c7578063095ea7b3146101e557806318160ddd146102085780631d43e1c01461021a57806323b872dd14610222578063249cb3fa146102355780633092afd514610248578063313ce5671461025d578063395093511461028e57806340c10f19146102a157806342966c68146102b4578063445850af146102c757806351bfb961146102da5780635c975abb146102e3578063603dfcb5146102ee57806370a0823114610301578063715018a61461031457806379cc67901461031c578063895d73861461032f5780638da5cb5b146103375780639335c28f1461034c57806395d89b411461035f578063983b2d5614610367578063986502751461037a578063a3a4137114610382578063a457c2d714610395578063a8082cb0146103a8578063a9059cbb146103b0578063aa271e1a146103c3578063ac7914e3146103d6578063b67f7bd4146103e9578063c859c4821461041c578063da1ec24614610445578063dd62ed3e14610465578063f2fde38b1461049e578063f698da25146104b1578063f8abd4bc146104b9578063fdec4c21146104cc575b600080fd5b6101cf6104df565b6040516101dc919061258f565b60405180910390f35b6101f86101f3366004612423565b610571565b60405190151581526020016101dc565b6003545b6040519081526020016101dc565b6101cf610623565b6101f861023036600461239a565b61063e565b61020c61024336600461247f565b6106e7565b61025b61025636600461234c565b610746565b005b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016101dc565b6101f861029c366004612423565b610764565b6101f86102af366004612423565b6107a9565b61025b6102c236600461244d565b6107c7565b61025b6102d53660046124a2565b610863565b61020c600c5481565b60065460ff166101f8565b61025b6102fc3660046124c4565b61097b565b61020c61030f36600461234c565b610b78565b61025b610ba4565b61025b61032a366004612423565b610bdf565b6101cf610c7c565b61033f610c8b565b6040516101dc919061256d565b61025b61035a36600461244d565b610c9a565b6101cf610efe565b61025b61037536600461234c565b610f0d565b61025b610f28565b61020c61039036600461234c565b610f31565b6101f86103a3366004612423565b610f3c565b61020c610fd5565b6101f86103be366004612423565b611062565b6101f86103d136600461234c565b611102565b61020c6103e43660046123d6565b61110f565b61040f6103f736600461244d565b6000908152600a602052604090206006015460ff1690565b6040516101dc9190612581565b61020c61042a36600461234c565b6001600160a01b03166000908152600b602052604090205490565b61045861045336600461244d565b6114e5565b6040516101dc919061274c565b61020c610473366004612367565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61025b6104ac36600461234c565b6115c3565b61020c611660565b61025b6104c736600461244d565b61166a565b61020c6104da3660046123d6565b611745565b6060600480546104ee9061280c565b80601f016020809104026020016040519081016040528092919081815260200182805461051a9061280c565b80156105675780601f1061053c57610100808354040283529160200191610567565b820191906000526020600020905b81548152906001019060200180831161054a57829003601f168201915b5050505050905090565b6040516370a0823160e01b8152600090829030906370a082319061059990339060040161256d565b60206040518083038186803b1580156105b157600080fd5b505afa1580156105c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e99190612466565b10156106105760405162461bcd60e51b815260040161060790612681565b60405180910390fd5b61061a838361184b565b90505b92915050565b6040805180820190915260018152603160f81b602082015290565b6040516370a0823160e01b8152600090829030906370a082319061066690889060040161256d565b60206040518083038186803b15801561067e57600080fd5b505afa158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b69190612466565b10156106d45760405162461bcd60e51b815260040161060790612681565b6106df848484611858565b949350505050565b60008281526007602052604081205460ff161561073e5760405173455243313832305f4143434550545f4d4147494360601b602082015260340160405160208183030381529060405280519060200120905061061d565b50600061061d565b61074f33611102565b61075857600080fd5b61076181611902565b50565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916107a091859061079b9086906127b1565b611944565b50600192915050565b60006107b433611102565b6107bd57600080fd5b6107a08383611a68565b6040516370a0823160e01b8152819030906370a08231906107ec90339060040161256d565b60206040518083038186803b15801561080457600080fd5b505afa158015610818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083c9190612466565b101561085a5760405162461bcd60e51b815260040161060790612681565b61076181611b41565b6000828152600a60205260409020600101546001600160a01b031661089a5760405162461bcd60e51b8152600401610607906126d0565b6000828152600a60205260409020600501541561094f576002816040516020016108c691815260200190565b60408051601f19818403018152908290526108e091612551565b602060405180830381855afa1580156108fd573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906109209190612466565b6000838152600a60205260409020600501541461094f5760405162461bcd60e51b8152600401610607906125f9565b6000828152600a602052604090206001015461097790839083906001600160a01b0316611b4b565b5050565b6000838152600a60205260409020600101546001600160a01b031615610a195760405162461bcd60e51b815260206004820152604760248201527f65786563757465486f6c643a2063616e206e6f7420736574206120726563697060448201527f69656e74206f6e20657865637574696f6e2061732069742077617320736574206064820152661bdb881a1bdb1960ca1b608482015260a401610607565b6001600160a01b038116610a895760405162461bcd60e51b815260206004820152603160248201527f65786563757465486f6c643a20726563697069656e74206d757374206e6f742060448201527062652061207a65726f206164647265737360781b6064820152608401610607565b6000838152600a602052604090206005015415610b3e57600282604051602001610ab591815260200190565b60408051601f1981840301815290829052610acf91612551565b602060405180830381855afa158015610aec573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610b0f9190612466565b6000848152600a602052604090206005015414610b3e5760405162461bcd60e51b8152600401610607906125f9565b6000838152600a6020526040902060010180546001600160a01b0319166001600160a01b038316179055610b73838383611b4b565b505050565b6001600160a01b0381166000908152600b602052604081205461061d90610b9e84611d09565b90611d24565b33610bad610c8b565b6001600160a01b031614610bd35760405162461bcd60e51b81526004016106079061264c565b610bdd6000611d30565b565b6040516370a0823160e01b8152819030906370a0823190610c0490339060040161256d565b60206040518083038186803b158015610c1c57600080fd5b505afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612466565b1015610c725760405162461bcd60e51b815260040161060790612681565b6109778282611d80565b6060610c866104df565b905090565b6000546001600160a01b031690565b8060016000828152600a6020526040902060069081015460ff1690811115610cc457610cc461285d565b14610ce15760405162461bcd60e51b8152600401610607906125c2565b6000828152600a60205260409020546001600160a01b0316331415610da4576000828152600a60205260409020600401544211610d815760405162461bcd60e51b815260206004820152603860248201527f72656c65617365486f6c643a2063616e206f6e6c792072656c656173652061666044820152773a32b9103a34329032bc3834b930ba34b7b7103230ba329760411b6064820152608401610607565b6000828152600a602052604090206006908101805460ff19169091179055610e49565b6000828152600a60205260409020600201546001600160a01b03163314610e2c5760405162461bcd60e51b815260206004820152603660248201527f72656c65617365486f6c643a2063616c6c6572206d75737420626520746865206044820152753437b6321039b2b73232b91037b9103737ba30b93c9760511b6064820152608401610607565b6000828152600a60205260409020600601805460ff191660041790555b6000828152600a60209081526040808320600381015490546001600160a01b03168452600b90925290912054610e7e91611d24565b6000838152600a6020818152604080842080546001600160a01b03168552600b83529084209490945591859052905260030154600c54610ebd91611d24565b600c5560405182907f67493c41cf2a398ecd74af2c26b3ad6114f9a0b0532ea06fc327adec6015110290610ef290339061256d565b60405180910390a25050565b6060600580546104ee9061280c565b610f1633611102565b610f1f57600080fd5b61076181611e01565b610bdd33611902565b600061061d82611d09565b3360009081526002602090815260408083206001600160a01b038616845290915281205482811015610fbe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610607565b610fcb3385858403611944565b5060019392505050565b600046817f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611002610c7c565b80519060200120611011610623565b80516020918201206040805192830194909452928101919091526060810191909152608081018390523060a082015260c00160408051601f1981840301815291905280516020909101209392505050565b6040516370a0823160e01b8152600090829030906370a082319061108a90339060040161256d565b60206040518083038186803b1580156110a257600080fd5b505afa1580156110b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110da9190612466565b10156110f85760405162461bcd60e51b815260040161060790612681565b61061a8383611e43565b600061061d600883611e50565b60006001600160a01b0385166111775760405162461bcd60e51b815260206004820152602760248201527f686f6c643a206e6f74617279206d757374206e6f742062652061207a65726f206044820152666164647265737360c81b6064820152608401610607565b836111d35760405162461bcd60e51b815260206004820152602660248201527f686f6c643a20616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608401610607565b6040516370a0823160e01b8152849030906370a08231906111f890339060040161256d565b60206040518083038186803b15801561121057600080fd5b505afa158015611224573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112489190612466565b10156112a55760405162461bcd60e51b815260206004820152602660248201527f686f6c643a20616d6f756e74206578636565647320617661696c61626c652062604482015265616c616e636560d01b6064820152608401610607565b85858585856040516020016112be95949392919061251b565b60408051601f1981840301815291905280516020909101209050600080828152600a6020526040902060069081015460ff16908111156113005761130061285d565b146113475760405162461bcd60e51b8152602060048201526017602482015276686f6c643a20696420616c72656164792065786973747360481b6044820152606401610607565b6040518060e00160405280336001600160a01b03168152602001876001600160a01b03168152602001866001600160a01b03168152602001858152602001848152602001838152602001600160068111156113a4576113a461285d565b90526000828152600a6020908152604091829020835181546001600160a01b03199081166001600160a01b03928316178355928501516001808401805486169284169290921790915593850151600283018054909416911617909155606083015160038201556080830151600482015560a0830151600582015560c08301516006808301805493949293909260ff199091169184908111156114485761144861285d565b021790555050336000908152600b6020526040902054611469915085611ed3565b336000908152600b6020526040902055600c546114869085611ed3565b600c5560408051858152602081018590529081018390526001600160a01b03808716919088169083907fe978043d2c2c19e698dfa9c4c7d635cd7a872597314f9f0b7979dae393c6da7c9060600160405180910390a495945050505050565b6115226040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a081018290529060c082015290565b6000828152600a6020908152604091829020825160e08101845281546001600160a01b03908116825260018301548116938201939093526002820154909216928201929092526003820154606082015260048201546080820152600582015460a082015260068083015491929160c084019160ff909116908111156115a9576115a961285d565b60068111156115ba576115ba61285d565b90525092915050565b336115cc610c8b565b6001600160a01b0316146115f25760405162461bcd60e51b81526004016106079061264c565b6001600160a01b0381166116575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610607565b61076181611d30565b6000610c86611edf565b6000818152600a60205260409020600101546001600160a01b03166116a15760405162461bcd60e51b8152600401610607906126d0565b6000818152600a60205260409020600501541561171f5760405162461bcd60e51b815260206004820152603660248201527f65786563757465486f6c643a206e65656420707265696d6167652069662074686044820152750ca40d0ded8c840d0c2e640c240d8dec6d640d0c2e6d60531b6064820152608401610607565b6000818152600a60205260408120600101546107619183916001600160a01b0316611b4b565b6000858585858560405160200161176095949392919061251b565b60405160208183030381529060405280519060200120905095945050505050565b600160076000836040516020016117989190612551565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6117d98282611e50565b156118265760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610607565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006107a0338484611944565b6000611865848484611f08565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156118ea5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b6064820152608401610607565b6118f78533858403611944565b506001949350505050565b61190d6008826120d1565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b0383166119a65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610607565b6001600160a01b038216611a075760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610607565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038216611abe5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610607565b611aca60008383612153565b8060036000828254611adc91906127b1565b90915550506001600160a01b03821660009081526001602052604081208054839290611b099084906127b1565b90915550506040518181526001600160a01b038316906000906000805160206128748339815191529060200160405180910390a35050565b610761338261215e565b8260016000828152600a6020526040902060069081015460ff1690811115611b7557611b7561285d565b14611b925760405162461bcd60e51b8152600401610607906125c2565b6000848152600a60205260409020600201546001600160a01b03163314611c0f5760405162461bcd60e51b815260206004820152602b60248201527f65786563757465486f6c643a2063616c6c6572206d757374206265207468652060448201526a686f6c64206e6f7461727960a81b6064820152608401610607565b6000848152600a602052604090208054600390910154611c3a916001600160a01b0316908490611f08565b6000848152600a6020908152604080832060068101805460ff19166002179055600381015490546001600160a01b03168452600b90925290912054611c7e91611d24565b6000858152600a6020818152604080842080546001600160a01b03168552600b83529084209490945591879052905260030154600c54611cbd91611d24565b600c55604080518481526001600160a01b038416602082015285917fc6d1a93a7a047b3f030e0a63b85e07ff5741659917295090572c23834d53281d910160405180910390a250505050565b6001600160a01b031660009081526001602052604090205490565b600061061a82846127c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611d8c8333610473565b905081811015611dea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610607565b611df78333848403611944565b610b73838361215e565b611e0c6008826117cf565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006107a0338484611f08565b60006001600160a01b038216611eb35760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610607565b506001600160a01b03166000908152602091909152604090205460ff1690565b600061061a82846127b1565b466000908152600960205260408120548015611efa57919050565b611f026122a6565b91505090565b6001600160a01b038316611f6c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610607565b6001600160a01b038216611fce5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610607565b611fd9838383612153565b6001600160a01b038316600090815260016020526040902054818110156120515760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610607565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906120889084906127b1565b92505081905550826001600160a01b0316846001600160a01b0316600080516020612874833981519152846040516120c291815260200190565b60405180910390a35b50505050565b6120db8282611e50565b6121315760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610607565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610b738383836122ca565b6001600160a01b0382166121be5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610607565b6121ca82600083612153565b6001600160a01b0382166000908152600160205260409020548181101561223e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610607565b6001600160a01b038316600090815260016020526040812083830390556003805484929061226d9084906127c9565b90915550506040518281526000906001600160a01b038516906000805160206128748339815191529060200160405180910390a3505050565b600046816122b2610fd5565b60009283526009602052604090922082905550919050565b60065460ff1615610b735760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b6064820152608401610607565b80356001600160a01b038116811461234757600080fd5b919050565b60006020828403121561235e57600080fd5b61061a82612330565b6000806040838503121561237a57600080fd5b61238383612330565b915061239160208401612330565b90509250929050565b6000806000606084860312156123af57600080fd5b6123b884612330565b92506123c660208501612330565b9150604084013590509250925092565b600080600080600060a086880312156123ee57600080fd5b6123f786612330565b945061240560208701612330565b94979496505050506040830135926060810135926080909101359150565b6000806040838503121561243657600080fd5b61243f83612330565b946020939093013593505050565b60006020828403121561245f57600080fd5b5035919050565b60006020828403121561247857600080fd5b5051919050565b6000806040838503121561249257600080fd5b8235915061239160208401612330565b600080604083850312156124b557600080fd5b50508035926020909101359150565b6000806000606084860312156124d957600080fd5b83359250602084013591506124f060408501612330565b90509250925092565b6007811061251757634e487b7160e01b600052602160045260246000fd5b9052565b6001600160601b0319606096871b811682529490951b909316601485015260288401919091526048830152606882015260880190565b600082516125638184602087016127e0565b9190910192915050565b6001600160a01b0391909116815260200190565b6020810161061d82846124f9565b60208152600082518060208401526125ae8160408501602087016127e0565b601f01601f19169190910160400192915050565b6020808252601d908201527f486f6c64206973206e6f7420696e204f72646572656420737461747573000000604082015260600190565b60208082526033908201527f65786563757465486f6c643a20707265696d616765206861736820646f6573206040820152720dcdee840dac2e8c6d040d8dec6d640d0c2e6d606b1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602f908201527f486f6c6461626c65546f6b656e3a20616d6f756e74206578636565647320617660408201526e61696c61626c652062616c616e636560881b606082015260800190565b60208082526056908201527f65786563757465486f6c643a206d75737420706173732074686520726563697060408201527f69656e74206f6e20657865637574696f6e2061732074686520726563697069656060820152751b9d081dd85cc81b9bdd081cd95d081bdb881a1bdb1960521b608082015260a00190565b600060e08201905060018060a01b0380845116835280602085015116602084015280604085015116604084015250606083015160608301526080830151608083015260a083015160a083015260c08301516127aa60c08401826124f9565b5092915050565b600082198211156127c4576127c4612847565b500190565b6000828210156127db576127db612847565b500390565b60005b838110156127fb5781810151838201526020016127e3565b838111156120cb5750506000910152565b600181811c9082168061282057607f821691505b6020821081141561284157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212202f6e3d932566634dd26b3d4580ec5c0d6e443c6e1481891fe5a0d1841a2f568b64736f6c63430008070033";

type ERC20HoldableTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20HoldableTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20HoldableToken__factory extends ContractFactory {
  constructor(...args: ERC20HoldableTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20HoldableToken> {
    return super.deploy(
      name,
      symbol,
      decimals,
      overrides || {}
    ) as Promise<ERC20HoldableToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, decimals, overrides || {});
  }
  attach(address: string): ERC20HoldableToken {
    return super.attach(address) as ERC20HoldableToken;
  }
  connect(signer: Signer): ERC20HoldableToken__factory {
    return super.connect(signer) as ERC20HoldableToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20HoldableTokenInterface {
    return new utils.Interface(_abi) as ERC20HoldableTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20HoldableToken {
    return new Contract(address, _abi, signerOrProvider) as ERC20HoldableToken;
  }
}
