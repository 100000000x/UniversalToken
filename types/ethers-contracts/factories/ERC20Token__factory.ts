/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20Token, ERC20TokenInterface } from "../ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "__decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "generateDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001abc38038062001abc8339810160408190526200003491620005a2565b82826200004133620000f8565b8151620000569060049060208501906200046b565b5080516200006c9060059060208401906200046b565b50506006805460ff1916905550620000843362000148565b6200008e6200019a565b50620000c76040518060400160405280600a81526020016922a92199182a37b5b2b760b11b815250620001c060201b620008ca1760201c565b60f81b7fff000000000000000000000000000000000000000000000000000000000000001660805250620006cb9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001638160086200021060201b620009181790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60004681620001a862000294565b60009283526009602052604090922082905550919050565b60016007600083604051602001620001d9919062000627565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6200021c82826200033b565b156200026f5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600046817f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620002c3620003c0565b8051602090910120620002ea6040805180820190915260018152603160f81b602082015290565b80516020918201206040805192830194909452928101919091526060810191909152608081018390523060a082015260c00160408051601f1981840301815291905280516020909101209392505050565b60006001600160a01b038216620003a05760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840162000266565b506001600160a01b03166000908152602091909152604090205460ff1690565b6060620003cc620003d1565b905090565b606060048054620003e29062000678565b80601f0160208091040260200160405190810160405280929190818152602001828054620004109062000678565b8015620004615780601f10620004355761010080835404028352916020019162000461565b820191906000526020600020905b8154815290600101906020018083116200044357829003601f168201915b5050505050905090565b828054620004799062000678565b90600052602060002090601f0160209004810192826200049d5760008555620004e8565b82601f10620004b857805160ff1916838001178555620004e8565b82800160010185558215620004e8579182015b82811115620004e8578251825591602001919060010190620004cb565b50620004f6929150620004fa565b5090565b5b80821115620004f65760008155600101620004fb565b600082601f8301126200052357600080fd5b81516001600160401b0380821115620005405762000540620006b5565b604051601f8301601f19908116603f011681019082821181831017156200056b576200056b620006b5565b816040528381528660208588010111156200058557600080fd5b6200059884602083016020890162000645565b9695505050505050565b600080600060608486031215620005b857600080fd5b83516001600160401b0380821115620005d057600080fd5b620005de8783880162000511565b94506020860151915080821115620005f557600080fd5b50620006048682870162000511565b925050604084015160ff811681146200061c57600080fd5b809150509250925092565b600082516200063b81846020870162000645565b9190910192915050565b60005b838110156200066257818101518382015260200162000648565b8381111562000672576000848401525b50505050565b600181811c908216806200068d57607f821691505b60208210811415620006af57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160f81c6113d2620006ea60003960006101eb01526113d26000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c806306fdde031461014e578063095ea7b31461016c57806318160ddd1461018f5780631d43e1c0146101a157806323b872dd146101a9578063249cb3fa146101bc5780633092afd5146101cf578063313ce567146101e4578063395093511461021557806340c10f191461022857806342966c681461023b5780635c975abb1461024e57806370a0823114610259578063715018a61461028257806379cc67901461028a578063895d73861461029d5780638da5cb5b146102a557806395d89b41146102c5578063983b2d56146102cd57806398650275146102e0578063a457c2d7146102e8578063a8082cb0146102fb578063a9059cbb14610303578063aa271e1a14610316578063dd62ed3e14610329578063f2fde38b14610362578063f698da2514610375575b600080fd5b61015661037d565b6040516101639190611268565b60405180910390f35b61017f61017a3660046111e6565b61040f565b6040519015158152602001610163565b6003545b604051908152602001610163565b610156610426565b61017f6101b73660046111aa565b610441565b6101936101ca366004611210565b6104f0565b6101e26101dd366004611155565b61054f565b005b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610163565b61017f6102233660046111e6565b61056d565b61017f6102363660046111e6565b6105a9565b6101e2610249366004611233565b6105c7565b60065460ff1661017f565b610193610267366004611155565b6001600160a01b031660009081526001602052604090205490565b6101e26105d1565b6101e26102983660046111e6565b61060c565b610156610692565b6102ad6106a1565b6040516001600160a01b039091168152602001610163565b6101566106b0565b6101e26102db366004611155565b6106bf565b6101e26106da565b61017f6102f63660046111e6565b6106e3565b61019361077c565b61017f6103113660046111e6565b610809565b61017f610324366004611155565b610816565b610193610337366004611177565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101e2610370366004611155565b610823565b6101936108c0565b60606004805461038c9061132b565b80601f01602080910402602001604051908101604052809291908181526020018280546103b89061132b565b80156104055780601f106103da57610100808354040283529160200191610405565b820191906000526020600020905b8154815290600101906020018083116103e857829003601f168201915b5050505050905090565b600061041c338484610994565b5060015b92915050565b6040805180820190915260018152603160f81b602082015290565b600061044e848484610ab8565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156104d85760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104e58533858403610994565b506001949350505050565b60008281526007602052604081205460ff16156105475760405173455243313832305f4143434550545f4d4147494360601b6020820152603401604051602081830303815290604052805190602001209050610420565b506000610420565b61055833610816565b61056157600080fd5b61056a81610c81565b50565b3360008181526002602090815260408083206001600160a01b0387168452909152812054909161041c9185906105a49086906112d0565b610994565b60006105b433610816565b6105bd57600080fd5b61041c8383610cc3565b61056a3382610d9c565b336105da6106a1565b6001600160a01b0316146106005760405162461bcd60e51b81526004016104cf9061129b565b61060a6000610ee4565b565b60006106188333610337565b9050818110156106765760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b60648201526084016104cf565b6106838333848403610994565b61068d8383610d9c565b505050565b606061069c61037d565b905090565b6000546001600160a01b031690565b60606005805461038c9061132b565b6106c833610816565b6106d157600080fd5b61056a81610f34565b61060a33610c81565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156107655760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104cf565b6107723385858403610994565b5060019392505050565b600046817f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6107a9610692565b805190602001206107b8610426565b80516020918201206040805192830194909452928101919091526060810191909152608081018390523060a082015260c00160408051601f1981840301815291905280516020909101209392505050565b600061041c338484610ab8565b6000610420600883610f76565b3361082c6106a1565b6001600160a01b0316146108525760405162461bcd60e51b81526004016104cf9061129b565b6001600160a01b0381166108b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cf565b61056a81610ee4565b600061069c610ff9565b600160076000836040516020016108e1919061124c565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6109228282610f76565b1561096f5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016104cf565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b0383166109f65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104cf565b6001600160a01b038216610a575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104cf565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b1c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104cf565b6001600160a01b038216610b7e5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104cf565b610b89838383611022565b6001600160a01b03831660009081526001602052604090205481811015610c015760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104cf565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610c389084906112d0565b92505081905550826001600160a01b0316846001600160a01b031660008051602061137d83398151915284604051610c7291815260200190565b60405180910390a35b50505050565b610c8c60088261102d565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b038216610d195760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104cf565b610d2560008383611022565b8060036000828254610d3791906112d0565b90915550506001600160a01b03821660009081526001602052604081208054839290610d649084906112d0565b90915550506040518181526001600160a01b0383169060009060008051602061137d8339815191529060200160405180910390a35050565b6001600160a01b038216610dfc5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104cf565b610e0882600083611022565b6001600160a01b03821660009081526001602052604090205481811015610e7c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104cf565b6001600160a01b0383166000908152600160205260408120838303905560038054849290610eab9084906112e8565b90915550506040518281526000906001600160a01b0385169060008051602061137d8339815191529060200160405180910390a3505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f3f600882610918565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006001600160a01b038216610fd95760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016104cf565b506001600160a01b03166000908152602091909152604090205460ff1690565b46600090815260096020526040812054801561101457919050565b61101c6110af565b91505090565b61068d8383836110d3565b6110378282610f76565b61108d5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016104cf565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b600046816110bb61077c565b60009283526009602052604090922082905550919050565b60065460ff161561068d5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016104cf565b80356001600160a01b038116811461115057600080fd5b919050565b60006020828403121561116757600080fd5b61117082611139565b9392505050565b6000806040838503121561118a57600080fd5b61119383611139565b91506111a160208401611139565b90509250929050565b6000806000606084860312156111bf57600080fd5b6111c884611139565b92506111d660208501611139565b9150604084013590509250925092565b600080604083850312156111f957600080fd5b61120283611139565b946020939093013593505050565b6000806040838503121561122357600080fd5b823591506111a160208401611139565b60006020828403121561124557600080fd5b5035919050565b6000825161125e8184602087016112ff565b9190910192915050565b60208152600082518060208401526112878160408501602087016112ff565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112e3576112e3611366565b500190565b6000828210156112fa576112fa611366565b500390565b60005b8381101561131a578181015183820152602001611302565b83811115610c7b5750506000910152565b600181811c9082168061133f57607f821691505b6020821081141561136057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220237ad26861faf4f6abb6ad2b2246170ef0c9a80924e71b533f81be5124278bd964736f6c63430008070033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    __decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Token> {
    return super.deploy(
      name,
      symbol,
      __decimals,
      overrides || {}
    ) as Promise<ERC20Token>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    __decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      __decimals,
      overrides || {}
    );
  }
  attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
